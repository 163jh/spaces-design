@face-border-radius: 0.5rem;
// Default style for LayerFace components
.face {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    height: 2.7rem;
    position: relative;
    
    margin-left: 2rem;
    margin-right: 2rem;
    margin-bottom: 0.3rem;
    padding-left: 0.6rem;
    padding-right: 0.4rem;    
    border-radius: @face-border-radius;
}

.face__separator {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    height: 3rem;
    padding-left: 0.5rem;
    flex-grow: 10;
    flex-shrink: 100;
    box-sizing: border-box;
}

.face__leash {
    height: 100%;
    align-tems: stretch;
    flex-shrink: 0;
    flex-grow: 0;

    &.column-half{
        width: 1.3rem;
    }
}

input[type="text"].face__name {
    font-size: 1.25rem;
}

.face__name {
    flex-grow: 1;
    flex-shrink: 100;
    -webkit-user-select: none;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.face__name[disabled] {
    cursor: default;
}

@media (resolution: 1dppx){
    .face__name {
        margin-top: -1px;
    }
}

// lock state
.face__locked {

}

// invisibility state
.face__invisible {
    
}

// Parity state
.face__parity_odd {
    
}
.face__parity_even {
    
}

// Selection state
.face:hover {
    color: @warm-white;
    background-color: @unselectedLayerHover;
    z-index: 99;
}

.face__name:focus {
    background-color:@warm-white;
    color: @editLayerText;
    -webkit-user-select: text;
}

.face__select_immediate .face__name {
    color: @warm-black;
}

.face__select_immediate:hover .face__name {
    color: @warm-white;
}

.face__select_immediate, .face__select_immediate:hover {
    background-color: @highlight;
}

.face__select_immediate .face__name, .face__select_immediate:hover .face__name {
    color: @selectedLayerText;
}

.face__group_start {
    margin-bottom: 0;
}

.face__group_start + ul {
    padding-top: 0.3rem;
}

.face__select_immediate + ul {
     position:relative;
     border-bottom-right-radius: @face-border-radius;
     border-bottom-left-radius: @face-border-radius;
}

.face__select_immediate + ul:after {
    background-color: @selectedLayerGroupBackground;
    border-bottom-right-radius: @face-border-radius;
    border-bottom-left-radius: @face-border-radius;
    content: " ";
    left:0;
    height:100%;
    margin: 0 2rem 0 2rem;
    position:absolute;
    top:calc(@face-border-radius * -1);
    width:calc(@properties-width - 4rem);
    z-index:-1;
}

.face__select_immediate + ul li:before {
    background-color: @selectedLayerGroupBackground;
    border-bottom-right-radius: @face-border-radius;
    border-bottom-left-radius: @face-border-radius;
    content: " ";
    left:0;
    height:100%;
    margin: 0 0 0 2rem;
    position:absolute;
    top:0;
    width:calc(@properties-width - 4rem);
    z-index:-1;
}

.face__select_immediate + ul div {
  
}

.face__select_immediate .face__leash {

}

// Hover state
.face__hover {
    background-color: red;    
}

// Drag state
.face__drag_target {
    background-color: none;
    opacity: 0.5;
}

// Drop state
.face__drop_target_above {
    border-top: .5rem inset @highlight;
    border-radius: 0;
}
.face__drop_target_below {
    border-bottom: .5rem inset @highlight;
    border-radius: 0;    
}

// Group collapsed state
.face__group_collapsed {
    height: 0;
    visibility: hidden;
    border-bottom: none;
}
.face__group_expanded {
    visibility: visible;
}


// Layer name focus/blur state
.face__input_focus {

}
.face__input_none {
    
}

// For unselected layers, whether the previous/next layer in the z-order is selected
.face__transition_to_select {

}
.face__transition_from_select {

}

// Search match state
.face__search_matched {
    
}
.face__search_none {
    
}
