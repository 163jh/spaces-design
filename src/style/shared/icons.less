// TODO: I need to normalize the naming convention, because there isn't one ATM -TR

.x-document-button(@name) {
  background: url("../img/ico-@{name}-white.svg") no-repeat center;
  background-size: .8rem;
}

.document-controls__previous { .x-document-button("previous-arrow") }
.document-controls__next { .x-document-button("next-arrow") }

.toolbar-button {
    display: flex;
    align-items: center;
    justify-content: center;
    
    svg {
        box-sizing: content-box;        
        width: 1.6rem;
        height: 1.6rem;
        padding-bottom: 0.2rem;        
        fill: @warm-white;
        stroke: @warm-white;
        color: @warm-gray;
    }
}

.tool-selected svg {    
    border-bottom: 1px solid @warm-white;    
}

.button-generator {
    background: url(../img/ico-generator-white.svg) no-repeat;
    background-size: 2rem;
    background-position-x: 1rem;
    background-position-y: 0.5rem;
}

.pop-over-header .button-generator {
    background: url(../img/ico-generator-black.svg) no-repeat;
    background-size: 2rem;
    background-position-x: 1rem;
    background-position-y: 0.5rem;
}

.x-mode-button(@name) {
    background: url("../img/ico-@{name}-black.svg") no-repeat;
    background-size: 2rem;
}

#mode-grid { .x-mode-button(mode-grid) }

#mode-divide { .x-mode-button(mode-divide) }

#mode-inset { .x-mode-button(mode-inset) }

.button-toggle {
    display: flex;
    align-items: center;
    justify-content: center;

    svg {
        width: 1.3rem;
        height: 1.3rem;
        fill: @warm-white;
        stroke: @warm-white;
        color: @warm-gray;
    }
}

.face {
    .button-toggle {  
        svg {
            display: none;
        }
    }
    
    .button-toggle[data-selected="true"] {
        svg {
            display: block;                 
            fill: @warm-white;
            stroke: @warm-white;            
        }
    }
    
    &:hover .button-toggle:not([data-selected="true"]) {
        opacity: 0.5;
    
        svg{
            display: block;            
            fill: @warm-white;
        }
    }
    
    [data-selected="true"] .button-toggle {
        svg {
            display: block;            
            fill: @warm-black;
            stroke: @warm-black;
        }
    }    
}

.face__select_immediate .button-toggle[data-selected="true"],
.face__select_ancestor .button-toggle[data-selected="true"],
.face__select_immediate:hover .button-toggle:not([data-selected="true"]),
.face__select_ancestor:hover .button-toggle:not([data-selected="true"]) {
    svg {
        fill: @warm-black;
        stroke: @warm-black;                    
        display: block;
    }
}

.fill-list__fill,
.stroke-list__stroke,
.drop-shadow-list__drop-shadow{
    
    .button-toggle {
        svg {
            display: none;
        }
    }

    .button-toggle[data-selected="false"] {
        svg {
            display: block;
            fill: @warm-white;
            stroke: @warm-white;                         
        }         
    }

    &:hover .button-toggle:not([data-selected="false"]) {
        opacity: 0.5;

        svg {
            display: block;                         
            fill: @warm-white;
            stroke: @warm-white;                         
        }
    }

    .button-toggle[data-selected="true"] {
        svg {
            display: none;            
            fill: @warm-black;
            stroke: @warm-black;
            color: @warm-gray;
        }
    }     
}

/* STYLE ----------------------*/

.button-combo:focus {
    background: url(../img/ico-search-white.svg) no-repeat center;
    background-position-x: .5rem;
}

.pop-over-header .button-combo:focus {
    background: url(../img/ico-search-black.svg) no-repeat center;
    background-position-x: .5rem;
}

/* PAGES ----------------------*/

.face__kind {
    display: flex;
    align-items: center;
    justify-content: center;
        
    svg{
        width: 1.4rem;
        height: 1.4rem;
        fill: @warm-white;
        stroke: @warm-white;                                 
    }
}

// applies to the selected item
.face__select_immediate .face__kind,
// applies to the ancestor of selected item
.face__select_ancestor .face__kind {
  svg{
      fill: @warm-black;
      stroke: @warm-black;
  }
}
